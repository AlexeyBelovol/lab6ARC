#include <iostream>

void main() {
    long X = 5;          // Початкове значення аргументу
    long REZ[7];         // Масив для результатів

    _asm {
        lea EBX, REZ; завантаження адреси результатів в регістр EBX
        mov ECX, 7; кількість повторень циклу(7 значень)

        m1:
        mov EAX, X; EAX = X
            imul EAX, EAX; EAX = X ^ 2
            imul EAX, 2; EAX = 2 * X ^ 2
            add EAX, 15; EAX = 2 * X ^ 2 + 15, це знаменник
            mov EDI, EAX; зберегти знаменник у регістрі EDI

            mov EAX, 7500; EAX = 7500 (чисельник)
            cdq; розширення для ділення
            div EDI; EAX = 7500 / (2 * X ^ 2 + 15), частка в EAX

            ; Округлення до найближчого цілого числа
            mov EDX, EDI; скопіювати знаменник у EDX
            shr EDX, 1; розділити знаменник на 2
            cmp EDX, EDX; порівняти залишок від ділення
            adc EAX, 0; додати 1 до частки, якщо залишок >= половини знаменника

            mov dword ptr[EBX], EAX; зберегти результат у масив REZ
            add EBX, 4; перейти до наступного елемента масиву
            add X, 1; збільшити аргумент X для наступного обчислення
            loop m1; повторити цикл
    }                        // кінець асемблерної вставки

    // Виведення результатів
    for (int i = 0; i < 7; ++i) {
        std::cout << "REZ[" << i << "] = " << REZ[i] << std::endl;
    }
}
